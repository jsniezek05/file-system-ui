{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","/Users/JDSniezek/Documents/apps/file-system-ui/src/app.html","/Users/JDSniezek/Documents/apps/file-system-ui/src/style.css"],"names":["App","client","get","then","data","JSON","parse","response","readFile","item","stringify","type","console","log","object","file","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot"],"mappings":";;;;;;;;;;;;;;MAEaA,cAAAA;AAEX,mBAAa;AAAA;;AAAA;;AACX,UAAIC,SAAS,mCAAb;AACAA,aAAOC,GAAP,CAAW,wBAAX,EACGC,IADH,CACQ,gBAAQ;AACZ,cAAKC,IAAL,GAAYC,KAAKC,KAAL,CAAWF,KAAKG,QAAhB,CAAZ;AACD,OAHH;AAID;;kBAEDC,6BAASC,MAAK;AAAA;;AACZ,WAAKA,IAAL,GAAYJ,KAAKK,SAAL,CAAeD,IAAf,CAAZ;AACA,WAAKE,IAAL,GAAYF,KAAKE,IAAjB;AACAC,cAAQC,GAAR,CAAY,KAAKJ,IAAjB;;AAEA,UAAG,KAAKE,IAAL,KAAc,QAAjB,EAA0B;AACxB,YAAIV,SAAS,mCAAb;AACAA,eAAOC,GAAP,sCAA8C,KAAKO,IAAnD,EACGN,IADH,CACQ,gBAAQ;AACZ,iBAAKW,MAAL,GAAcT,KAAKC,KAAL,CAAWF,KAAKG,QAAhB,CAAd;AACD,SAHH;AAID,OAND,MAOI;AACF,YAAIN,UAAS,mCAAb;AACAA,gBAAOC,GAAP,iCAAyC,KAAKO,IAA9C,EACGN,IADH,CACQ,gBAAQ;AACZ,iBAAKY,IAAL,GAAYX,KAAKG,QAAjB;AACD,SAHH;AAID;AAEF;;;;;;;;;;;oBChCY;AACbS,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgB1B,IAAhB,CAAqB;AAAA,aAAMoB,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeZ,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;ACFD;ACAA","file":"app-bundle.js","sourcesContent":["import {HttpClient} from'aurelia-http-client';\n\nexport class App {\n\n  constructor(){\n    let client = new HttpClient;\n    client.get('http://localhost:3001/')\n      .then(data => {\n        this.data = JSON.parse(data.response);\n      })\n  }\n\n  readFile(item){\n    this.item = JSON.stringify(item);\n    this.type = item.type;\n    console.log(this.item);\n\n    if(this.type === 'folder'){\n      let client = new HttpClient;\n      client.get(`http://localhost:3001/directory/${this.item}`)\n        .then(data => {\n          this.object = JSON.parse(data.response);\n        })\n    }\n    else{\n      let client = new HttpClient;\n      client.get(`http://localhost:3001/read/${this.item}`)\n        .then(data => {\n          this.file = data.response;\n        })\n    }\n\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n",null,null],"sourceRoot":"../src"}