{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js","resources/elements/file-browser.js","code-mirror.js","/Users/JohnS/Documents/apps/file-system-ui/src/app.html","style.styl","/Users/JohnS/Documents/apps/file-system-ui/src/resources/elements/file-browser.html"],"names":["App","currentFile","client","get","then","data","JSON","parse","response","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","FileBrowser","codeMirrorService","getChildren","item","open","fullPath","content","cm","getInstance","setValue","children","CodeMirrorService","instance","CodeMirror","document","getElementById","lineNumbers"],"mappings":";;;;;;;;;;;;;;MAEaA,cAAAA,MAGX,eAAa;AAAA;;AAAA;;AAAA,SAFbC,WAEa,GAFC,EAED;;AACX,SAAKC,MAAL,GAAc,mCAAd;AACA,SAAKA,MAAL,CAAYC,GAAZ,CAAgB,gCAAhB,EACGC,IADH,CACQ,gBAAQ;AACZ,YAAKC,IAAL,GAAYC,KAAKC,KAAL,CAAWF,KAAKG,QAAhB,CAAZ;AACD,KAHH;AAID;;;;;;;;oBCXY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBlB,IAAhB,CAAqB;AAAA,aAAMY,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeZ,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCGYW,sBAAAA,sBADZ;AAKC,yBAAYC,iBAAZ,EAA+B;AAAA;;AAAA;;AAAA;;AAC7B,WAAKvB,MAAL,GAAc,mCAAd;AACA,WAAKuB,iBAAL,GAAyBA,iBAAzB;AACD;;0BAEDC,mCAAYC,MAAM;AAAA;;AACjB,UAAGA,KAAKC,IAAR,EAAc;AAAE,eAAOD,KAAKC,IAAL,GAAY,KAAnB;AAA2B;AAC3CD,WAAKC,IAAL,GAAY,IAAZ;AACC,WAAK1B,MAAL,CAAYC,GAAZ,CAAgB,yCAAyCwB,KAAKE,QAA9D,EACGzB,IADH,CACQ;AAAA,eAAQE,KAAKC,KAAL,CAAWF,KAAKG,QAAhB,CAAR;AAAA,OADR,EAEGJ,IAFH,CAEQ,gBAAQ;AACZ,YAAGC,KAAKyB,OAAR,EAAiB;AACf,gBAAK7B,WAAL,CAAiB6B,OAAjB,GAA2BzB,KAAKyB,OAAhC;AACA,gBAAKC,EAAL,GAAU,MAAKN,iBAAL,CAAuBO,WAAvB,EAAV;AACA,gBAAKD,EAAL,CAAQE,QAAR,CAAiB,MAAKhC,WAAL,CAAiB6B,OAAlC;AACD,SAJD,MAIO;AACLH,eAAKO,QAAL,GAAgB7B,IAAhB;AACD;AACF,OAVH;AAWD;;;;;;;;;;;;;;;;;;;;;;;;MC5BU8B,4BAAAA;;;;;gCACZH,qCAAc;AACb,WAAKI,QAAL,GAAgB,KAAKA,QAAL,IAAiBC,WAAWC,SAASC,cAAT,CAAwB,MAAxB,CAAX,EAA4C;AACnEC,qBAAa;AADsD,OAA5C,CAAjC;AAGM,aAAO,KAAKJ,QAAZ;AACN;;;;;ACNF;ACAA;ACAA,EDCE,QAAO,EAAP;EACA,SAAQ,EAAR;;AACF;EACE,SAAQ,KAAR;;AACA;EACE,OAAM,MAAN","file":"app-bundle.js","sourcesContent":["import {HttpClient} from'aurelia-http-client';\n\nexport class App {\n  currentFile = {};\n\n  constructor(){\n    this.client = new HttpClient;\n    this.client.get('http://localhost:3000/children')\n      .then(data => {\n        this.data = JSON.parse(data.response);\n      });\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {HttpClient} from'aurelia-http-client';\nimport {bindable, inject} from 'aurelia-framework';\nimport {CodeMirrorService} from '../../code-mirror';\n\n@inject(CodeMirrorService)\nexport class FileBrowser {\n\t@bindable data;\n\t@bindable currentFile;\n\n  constructor(codeMirrorService) {\n    this.client = new HttpClient;\n    this.codeMirrorService = codeMirrorService;\n  }\n\n  getChildren(item) {\n  \tif(item.open) { return item.open = false; }\n  \titem.open = true;\n    this.client.get('http://localhost:3000/children?path=' + item.fullPath)\n      .then(data => JSON.parse(data.response))\n      .then(data => {\n        if(data.content) {\n          this.currentFile.content = data.content;\n          this.cm = this.codeMirrorService.getInstance();\n          this.cm.setValue(this.currentFile.content);\n        } else {\n          item.children = data;\n        }\n      });\n  }\n}","export class CodeMirrorService {\n\tgetInstance() {\n\t\tthis.instance = this.instance || CodeMirror(document.getElementById('code'), {\n            lineNumbers: true\n        });\n        return this.instance;\n\t}\n}",null,null,null],"sourceRoot":"../src"}